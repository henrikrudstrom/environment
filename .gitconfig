[user]
name = Henrik Rudstrøm
email = henrik.rudstrom@amedia.no
[url "ssh://git@github.com/"]
	insteadOf = https://github.com/
[core]
pager = diff-so-fancy | less --tabs=4 -RFX
ignorecase = false
[push]
default = simple
[pull]
ff = only
[color]
ui = true
[color "branch"]
current = magenta reverse
local = green bold
remote = red bold
[color "status"]
added = green
changed = cyan
untracked = red
[color "diff-highlight"]
oldNormal = red bold
oldHighlight = red bold 52
newNormal = green bold
newHighlight = green bold 22
[color "diff"]
meta = yellow
frag = magenta bold
commit = yellow bold
old = red bold
new = green bold
whitespace = red reverse
[alias]
lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
lgall = !git lg --all
lga = !git lgall
lg5 = !git lg -5
lg10 = !git lg -10
lg15 = !git lg -15
lg20 = !git lg -20

pushf = push --force-with-lease

sp = stash pop
sl = stash list
sa = stash apply
s = stash

br = branch -v --color
bra = branch -av --color
brdel = branch -D
brc = "!f() { git branch ${1} && git checkout ${1}; }; f"

brlocaloneline = !git branch | grep -v \\* | xargs
brdeletelocal = !git branch -D $(git brlocaloneline) || echo "Nothing to delete"
brallfromremotes = !git branch -a | grep ‘remotes/' | grep -v "HEAD" | sed ‘s/remotes\\///'
brcreatefromremotes = !git brallfromremotes | xargs git branch
brsync = !git com && git brdeletelocal && git fetcha
sync = !git brsync

rv = remote -v
co = checkout
cob = checkout -b
com = checkout master
cl = config -l
st = status
cloner = clone --recursive
cl = clone
ci = commit
aci = commit -a
cia = commit --amend
ciaa = commit --amend -a --amend -C HEAD
fetchp = fetch --prune
fetcha = fetch --all
dc = diff --cached
mergef = merge --ff-only
aliase = !vim ~/.gitconfig
undo = reset --soft HEAD~1
new = !sh -c 'git log $1@{1}..$1@{0} "$@"'
wip = commit -a -m "wip"

up = "!f() { git checkout ${1-master} && git pull --rebase && git checkout -; git rebase ${1-master}; }; f"

squash = "!f(){ git reset --soft HEAD~${1} && git commit --edit -m\"$(git log --format=%B --reverse HEAD..HEAD@{1})\"; };f"

movebranch = branch -f  
fixup = ci --fixup
autosquash = rebase -i --autosquash 
